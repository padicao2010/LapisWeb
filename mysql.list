CREATE USER 'yvanhom'@'localhost' IDENTIFIED BY '1234';

CREATE DATABASE IF NOT EXISTS trpy DEFAULT CHARSET utf8 COLLATE utf8_general_ci;

GRANT all privileges ON trpy.* TO 'yvanhom'@'localhost' IDENTIFIED BY '1234';

CREATE TABLE tr_project(
  pid INT NOT NULL AUTO_INCREMENT,
  pname VARCHAR(48) NOT NULL,
  pdesc VARCHAR(256) default "",
  lastupdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  pfile INT DEFAULT 0,
  pline INT DEFAULT 0,
  ntred INT DEFAULT 0,
  PRIMARY KEY(pid)
);

CREATE TABLE tr_file(
  fid INT NOT NULL AUTO_INCREMENT,
  pid INT NOT NULL,
  fline INT DEFAULT 0,
  fname VARCHAR(48) NOT NULL,
  fdesc VARCHAR(256) default "",
  ntred INT DEFAULT 0,
  PRIMARY KEY(fid),
  FOREIGN KEY(pid) REFERENCES tr_project(pid)
);

CREATE TABLE tr_filetext(
  fid INT NOT NULL,
  ftext LONGTEXT NOT NULL,
  PRIMARY KEY(fid),
  FOREIGN KEY(fid) REFERENCES tr_file(fid)
);

CREATE TABLE tr_line(
  lid INT NOT NULL,
  fid INT NOT NULL,
  pos INT NOT NULL,
  ldesc VARCHAR(256) default "",
  orgstr TEXT NOT NULL,
  trstr TEXT,
  nupd INT DEFAULT 0,
  acceptlog INT,
  PRIMARY KEY(fid, lid),
  FOREIGN KEY(fid) REFERENCES tr_file(fid)
);

CREATE TABLE tr_user(
  uid INT NOT NULL AUTO_INCREMENT,
  uname VARCHAR(48) NOT NULL,
  upasswd VARCHAR(48) NOT NULL,
  PRIMARY KEY(uid),
  UNIQUE(uname)
);

CREATE TABLE tr_log(
  logid INT NOT NULL AUTO_INCREMENT,
  fid INT NOT NULL,
  lid INT NOT NULL,
  uid INT NOT NULL,
  bfstr TEXT NOT NULL,
  utime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(logid),
  FOREIGN KEY(fid, lid) REFERENCES tr_line(fid, lid),
  FOREIGN KEY(uid) REFERENCES tr_user(uid)
);

CREATE TABLE tr_dict(
  did INT NOT NULL AUTO_INCREMENT,
  pid INT NOT NULL,
  sstr VARCHAR(64) NOT NULL UNIQUE,
  dstr VARCHAR(64) NOT NULL,
  acceptlog INT,
  PRIMARY KEY(did),
  FOREIGN KEY(pid) REFERENCES tr_project(pid)
);

CREATE TABLE tr_dictlog(
  dlogid INT NOT NULL AUTO_INCREMENT,
  did INT NOT NULL,
  uid INT NOT NULL,
  utime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  ndstr VARCHAR(64) NOT NULL,
  PRIMARY KEY(dlogid),
  FOREIGN KEY(uid) REFERENCES tr_user(uid),
  FOREIGN KEY(did) REFERENCES tr_dict(did)
);
